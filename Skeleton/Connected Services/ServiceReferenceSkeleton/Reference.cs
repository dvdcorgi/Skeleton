//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Skeleton.ServiceReferenceSkeleton {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tblSkeleton", Namespace="http://schemas.datacontract.org/2004/07/SkelService.Model")]
    [System.SerializableAttribute()]
    public partial class tblSkeleton : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceSkeleton.IServiceSkeleton")]
    public interface IServiceSkeleton {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSkeleton/GetData", ReplyAction="http://tempuri.org/IServiceSkeleton/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSkeleton/GetData", ReplyAction="http://tempuri.org/IServiceSkeleton/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSkeleton/AddItem", ReplyAction="http://tempuri.org/IServiceSkeleton/AddItemResponse")]
        bool AddItem(Skeleton.ServiceReferenceSkeleton.tblSkeleton tSkeleton);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSkeleton/AddItem", ReplyAction="http://tempuri.org/IServiceSkeleton/AddItemResponse")]
        System.Threading.Tasks.Task<bool> AddItemAsync(Skeleton.ServiceReferenceSkeleton.tblSkeleton tSkeleton);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSkeleton/GetItems", ReplyAction="http://tempuri.org/IServiceSkeleton/GetItemsResponse")]
        Skeleton.ServiceReferenceSkeleton.tblSkeleton[] GetItems(string itemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSkeleton/GetItems", ReplyAction="http://tempuri.org/IServiceSkeleton/GetItemsResponse")]
        System.Threading.Tasks.Task<Skeleton.ServiceReferenceSkeleton.tblSkeleton[]> GetItemsAsync(string itemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSkeleton/UpdateItem", ReplyAction="http://tempuri.org/IServiceSkeleton/UpdateItemResponse")]
        bool UpdateItem(Skeleton.ServiceReferenceSkeleton.tblSkeleton tSkeleton);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSkeleton/UpdateItem", ReplyAction="http://tempuri.org/IServiceSkeleton/UpdateItemResponse")]
        System.Threading.Tasks.Task<bool> UpdateItemAsync(Skeleton.ServiceReferenceSkeleton.tblSkeleton tSkeleton);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceSkeletonChannel : Skeleton.ServiceReferenceSkeleton.IServiceSkeleton, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSkeletonClient : System.ServiceModel.ClientBase<Skeleton.ServiceReferenceSkeleton.IServiceSkeleton>, Skeleton.ServiceReferenceSkeleton.IServiceSkeleton {
        
        public ServiceSkeletonClient() {
        }
        
        public ServiceSkeletonClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSkeletonClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSkeletonClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSkeletonClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public bool AddItem(Skeleton.ServiceReferenceSkeleton.tblSkeleton tSkeleton) {
            return base.Channel.AddItem(tSkeleton);
        }
        
        public System.Threading.Tasks.Task<bool> AddItemAsync(Skeleton.ServiceReferenceSkeleton.tblSkeleton tSkeleton) {
            return base.Channel.AddItemAsync(tSkeleton);
        }
        
        public Skeleton.ServiceReferenceSkeleton.tblSkeleton[] GetItems(string itemName) {
            return base.Channel.GetItems(itemName);
        }
        
        public System.Threading.Tasks.Task<Skeleton.ServiceReferenceSkeleton.tblSkeleton[]> GetItemsAsync(string itemName) {
            return base.Channel.GetItemsAsync(itemName);
        }
        
        public bool UpdateItem(Skeleton.ServiceReferenceSkeleton.tblSkeleton tSkeleton) {
            return base.Channel.UpdateItem(tSkeleton);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateItemAsync(Skeleton.ServiceReferenceSkeleton.tblSkeleton tSkeleton) {
            return base.Channel.UpdateItemAsync(tSkeleton);
        }
    }
}
